1)\n : new line
  \t : horizontal tab space
  \v : vertical tab space
  \b : backspace
  \f : form feed
  \r : carriage return
  \0 : null character
  \' : single quote
  \" : double quote
  \\ : backslash
  \a : audible bell
  \? : question mark sequence
  \nnn : prints octal value
  \xhh : prints hexadecimal value


2) length():- This method is used to find the length or number of elements present in a string.
          eg:let myString = "Javascript is very easy";
             console.log(myString.length);//it prints the length of myString variable which is 23.

    substring():-This method is used to extract characters from a particular string from a start index to an end index.
            eg: let myString = "JSMarathon";
                console.log(myString.substring(2,9));// it prints 'Maratho' which is a substring of myString


3)padStart():- This method pads the current string with another string  until the resulting string reaches the given length. It pads only on the front of that string.
             eg: let id = "092384950";
                 console.log(id.padStart(10,'*'));
                 //suppose id is a string which should contain 10 digits. But the input contains only 9 digits. So by id.padStart(10,'*) which fills '*' on the front of that id to acquire the size 10.

  padEnd():-   This method pads the current string with a given string  so that the resulting string reaches a given length. The padding is applied from the end of the current string.
             eg: let str = 'coded'
              console.log(str.padEnd(10,'#'));//suppose the string should contain 10 letters. But the may not be 10 letters. So that the padEnd() method fills that string to 10 letters by adding '#' to the remaining spaces. ie,coded##### is the required output.




4)A global object is an object that always exists in the global scope. In JavaScript, there's always a global object defined. In a web browser, when scripts create global variables defined with the var keyword, they're created as members of the global object. The global object's interface depends on the execution context in which the script is running.
  The Javascript global scope is the context where everything in a Javascript program executes by default. This scope includes all variables, objects, and references that are not contained within a customized scope defined by a programmer. Global scope is the entire Javascript execution environment.



5)JavaScript engines are V8(google),SpiderMonkey(Mozilla Firefox),JavaScriptCore(Safari),Chakra(Explorer)

